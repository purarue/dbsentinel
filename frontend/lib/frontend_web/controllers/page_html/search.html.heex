<.flash_group flash={@flash} />
<section class="flex w-full flex-col items-start justify-center p-3">
  <form
    id="search-form"
    class="flex w-full flex-col items-start justify-center p-3"
    onSubmit="/search"
    method="GET"
  >
    <label for="title" class="text-lg font-bold dark:text-gray-300">
      Search
    </label>
    <input
      type="text"
      name="title"
      id="title"
      class="sm:w-full md:w-3/4 lg:w-1/2 p-2 border-2 border-gray-300 rounded-lg dark:bg-gray-800 dark:text-white"
      placeholder="Enter a title to search for..."
    />
    <div class="items-left m-1 flex flex-col justify-center sm:flex-row">
      <label for="entry_type" class="text-lg font-bold dark:text-gray-300 my-2">
        Entry Type
        <select
          name="entry_type"
          id="entry_type"
          class="mx-2 mr-4 pr-8 rounded-md border-2 border-gray-300 p-2 dark:bg-gray-800 dark:text-white"
        >
          <option value="anime">Anime</option>
          <option value="manga">Manga</option>
        </select>
      </label>
      <label for="status" class="text-lg font-bold dark:text-gray-300 my-2">
        Approved Status
        <button type="button" class="m-1" onClick="statusInfo()">
          <.icon name="hero-information-circle" />
        </button>
        <select
          id="status"
          name="status"
          class="mx-3 mr-4 rounded-md border-2 border-gray-300 px-2 dark:bg-gray-800 dark:text-white"
        >
          <option value="all">All</option>
          <option value="approved">Approved</option>
          <option value="unapproved">Unapproved</option>
          <option value="deleted">Deleted</option>
          <option value="denied">Denied</option>
        </select>
      </label>
      <label for="media_type" class="text-lg font-bold dark:text-gray-300 my-2">
        Media Type
        <select
          name="media_type"
          id="media_type"
          class="ml-2 rounded-md border-2 border-gray-300 p-2 dark:bg-gray-800 dark:text-white"
        >
          <option value="all">All</option>
        </select>
      </label>
    </div>
    <div class="items-left m-1 flex flex-col justify-center sm:flex-row">
      <label for="order_by" class="text-lg font-bold dark:text-gray-300 my-1">
        Order By
        <select
          name="order_by"
          id="order_by"
          class="ml-2 mr-3 rounded-md border-2 border-gray-300 p-2 dark:bg-gray-800 dark:text-white"
        >
          <option value="id">ID</option>
          <option value="title">Title</option>
          <option value="start_date">Start Date</option>
          <option value="end_date">End Date</option>
          <option value="status_updated_at">Status Updated At</option>
          <option value="metadata_updated_at">
            Metadata Updated At
          </option>
          <option value="member_count">Popularity</option>
          <option value="average_episode_duration">
            Episode Duration
          </option>
        </select>
      </label>
      <label for="sort" class="text-lg font-bold dark:text-gray-300 my-1">
        Sort
        <select
          name="sort"
          id="sort"
          class="ml-2 pr-8 mr-3 rounded-md border-2 border-gray-300 p-2 dark:bg-gray-800 dark:text-white"
        >
          <option value="desc">Descending</option>
          <option value="asc">Ascending</option>
        </select>
      </label>
      <label for="page" class="my-1 text-lg font-bold dark:text-gray-300">
        Page
        <input
          type="number"
          name="page"
          id="page"
          class="ml-2 rounded-md border-2 border-gray-300 p-2 dark:bg-gray-800 dark:text-white"
          value="1"
        />
      </label>
    </div>
    <div class="items-left m-1 flex flex-col justify-center sm:flex-row">
      <label for="sfw" class="text-lg font-bold dark:text-gray-300 mr-2">
        SFW
        <input
          type="checkbox"
          name="sfw"
          id="sfw"
          class="ml-2 rounded-md border-2 border-gray-300 p-2"
        />
      </label>
      <label for="nsfw" class="text-lg font-bold dark:text-gray-300 mr-2">
        NSFW
        <input
          type="checkbox"
          name="nsfw"
          id="nsfw"
          class="ml-2 rounded-md border-2 border-gray-300 p-2"
        />
      </label>
      <label for="blur" class="text-lg font-bold dark:text-gray-300">
        Blur NSFW
        <input
          type="checkbox"
          name="blur"
          id="blur"
          class="ml-2 rounded-md border-2 border-gray-300 p-2"
          checked
        />
      </label>
    </div>
    <button
      type="submit"
      class="mt-4 p-2 text-2xl rounded-md border-2 border-gray-300 dark:bg-gray-800 dark:text-white flex flex-row items-center justify-center"
    >
      <p class="mr-2">
        Search
      </p>
      <.icon name="hero-magnifying-glass" class="text-2xl" />
    </button>
  </form>
</section>
<section class="flex w-full flex-col items-start justify-center p-3">
  <div class="w-full flex justify-between items-center my-1">
    <button class="prev-page p-3 rounded-lg border-2 border-gray-300 dark:bg-gray-800 dark:text-white flex flex-row items-center justify-center">
      <.icon name="hero-arrow-left" />
      <p class="ml-2">
        Previous
      </p>
    </button>
    <div class="w-full flex items-center justify-center dark:text-gray-300">
      <div class="flex flex-col w-full justify-center items-center">
        <%= if @data.total_count == 0 do %>
          <div class="font-semibold text-lg">
            No Results
          </div>
        <% else %>
          <div class="font-semibold text-lg">
            Total Count: <%= @data.total_count %>
          </div>
        <% end %>
        <%= if length(@data.results) == 0 do %>
          <div>
            No More Results, go
            <a href="#" class="prev-page text-blue-500 dark:text-blue-400">back</a>
            a page
          </div>
        <% end %>
      </div>
    </div>
    <button class="next-page p-3 rounded-lg border-2 border-gray-300 dark:bg-gray-800 dark:text-white flex flex-row items-center justify-center">
      <p class="mr-2">
        Next
      </p>
      <.icon name="hero-arrow-right" />
    </button>
  </div>
  <%= if length(@data.results) > 0 do %>
    <table class="max-w-full table-fixed">
      <thead>
        <tr class="border-2 border-black bg-gray-100 dark:bg-inherit dark:border-gray-100 dark:text-gray-300">
          <th class="p-2">
            <!-- image -->
          </th>
          <th class="p-2">Meta</th>
          <th class="p-2">Data</th>
          <th class="cursor flex flex-row items-center justify-center p-2">
            <div>Dates</div>
            <!-- button that tells you about dates when you click it -->
            <button id="date_info" type="button" onclick="dateInfo()" class="m-1">
              <.icon name="hero-information-circle" />
            </button>
          </th>
        </tr>
      </thead>
      <tbody>
        <!-- loop through results -->
        <%= for res <- @data.results do %>
          <tr class="w-full">
            <td class="w-1/12 border border-gray-300 dark:border-gray-100">
              <%= if res["image_url"] do %>
                <a
                  title="View Image"
                  target="_blank"
                  href={res["image_url"]}
                  rel="noreferrer"
                  class="dark:text-gray-300"
                >
                  <img
                    src={res["image_url"]}
                    alt="Failed to fetch image from MAL"
                    class={"max-h-44 max-w-44 cover-image " <> if res["nsfw"] == true do "nsfw" else "" <> "" end}
                  />
                </a>
              <% else %>
                <div class="w-full h-full flex items-center justify-center dark:text-gray-300">
                  <.icon name="hero-x-mark" class="text-4xl" />
                </div>
              <% end %>
            </td>
            <td class="w-2/12 border p-2 text-gray-900 dark:text-gray-300 dark:border-gray-100">
              <div class="flex w-full flex-col items-center justify-center">
                <div>
                  ID:
                  <%= if res["approved_status"] == "approved" or res["approved_status"] == "unapproved" do %>
                    <a
                      class="text-blue-500 dark:text-blue-400"
                      href={res["url"]}
                      target="_blank"
                      rel="noreferrer"
                      %
                    >
                      <%= res["id"] %>
                    </a>
                  <% else %>
                    <%= res["id"] %>
                  <% end %>
                </div>
                <div class="my-1 text-xs">
                  <%= if is_nil(res["nsfw"]) do %>
                    Unknown
                  <% else %>
                    <%= if res["nsfw"] do %>
                      NSFW
                    <% else %>
                      SFW
                    <% end %>
                  <% end %>
                </div>
                <div class="text-xs">
                  <%= res["approved_status"] %>
                </div>
              </div>
            </td>
            <td class="w-6/12 border p-2 text-gray-900 dark:text-gray-300 dark:border-gray-">
              <div class="flex w-full flex-col items-center justify-center dark:text-gray-300">
                <div><%= res["title"] %></div>
              </div>
              <hr class="my-2 w-10/12 mx-auto" />
              <ul class="mb-2 flex w-full flex-col items-center justify-center text-sm sm:flex-row">
                <li class="mx-3 flex flex-row items-center justify-center dark:text-gray-300">
                  media type: <%= res["media_type"] %>
                </li>
                <li class="mx-3 flex flex-row items-center justify-center dark:text-gray-300">
                  members: <%= res["members"] || "-" %>
                </li>
                <li class="mx-3 flex flex-row items-center justify-center dark:text-gray-300">
                  ep duration: <%= res["average_episode_duration"] %>
                </li>
              </ul>
              <ul class="mb-2 flex w-full flex-col items-center justify-center text-sm sm:flex-row">
                <%= for {jk, jv} <- res["json_map"] do %>
                  <li class="mx-3 flex flex-row items-center justify-center dark:text-gray-300">
                    <%= jk %>: <%= jv %>
                  </li>
                <% end %>
                <li>
                  <a
                    class="text-blue-500 dark:text-blue-400"
                    href={res["entry_url"]}
                    target="_blank"
                  >
                    more info
                  </a>
                </li>
              </ul>
            </td>
            <td class="w-3/12 border p-0 sm:p-1 md:p-2 dark:text-gray-300">
              <div class="flex w-full flex-col items-center justify-center">
                <div class="text-xs">
                  Start Date: <%= res["start_date"] || "-" %>
                </div>
                <div class="text-xs">
                  End Date: <%= res["end_date"] || "-" %>
                </div>
                <div class="text-xs">
                  Metadata Last Updated:
                  <span class="date-convert" data-date={res["metadata_updated_at"]}>-</span>
                </div>
                <div class="text-xs">
                  Status Updated At:
                  <span class="date-convert" data-date={res["status_updated_at"]}>-</span>
                </div>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  <% end %>
</section>
<script>
  let animeMediaTypes = [
      "all",
      "movie",
      "music",
      "ona",
      "ova",
      "special",
      "tv",
      "unknown",
  ];
  let mangaMediaTypes = [
      "all",
      "doujinshi",
      "light_novel",
      "manga",
      "manhua",
      "manhwa",
      "novel",
      "one_shot",
  ];

  function dateInfo() {
    alert("These deleted/denied are estimates based on when data was added/last cached, and not necessarily when the entry was deleted/denied.");
  }

  function statusInfo() {
    alert("Approved: Approved and you can add it to your list on MAL\nUnapproved: Not approved, but still visible on MAL if you know the ID.\nDeleted: Deleted from MALs website and all user animelists. If not archived elsewhere, the data is gone forever.\nDenied: Was unapproved, but a moderator denied it because they determined it did not meet MALs DB Guidelines")
  }

  document.addEventListener("DOMContentLoaded", () => {

      // when  anime/manga is selected in the entry type, update the media type options
      function updateMediaTypes() {
          const entryType = document.getElementById("entry_type")
          const mediaType = document.getElementById("media_type")
          const mediaTypes = entryType.value === "anime" ? animeMediaTypes : mangaMediaTypes;
          mediaType.innerHTML = "";
          for (const media of mediaTypes) {
              const option = document.createElement("option");
              option.value = media;
              option.innerText = media;
              mediaType.appendChild(option);
          }
      }

      // parse the url params from values and set the input values
      function parseParamsFromURL(only) {
        new URL(window.location.href).searchParams.forEach((value, key) => {
            if (only !== null && key != only) {
              return;
            }
            const input = document.getElementById(key);
            if (input) {
              if (input.type === "checkbox") {
                if (value == "on") {
                  input.checked = true;
                } else if (value == "off") {
                  input.checked = false;
                } else {
                  input.checked = true;
                }
                if (key == "nsfw" || key == "sfw") {
                  ratingCheckboxes(key)
                }
              } else {
                  input.value = value;
              }
            }
          });
      }

    const displayDate = (date) => {
      return new Date(date * 1000).toLocaleString();
    };

      function convertDates() {
        const dates = document.querySelectorAll(".date-convert");
        for (const date of dates) {
          const dateValue = date.dataset.date;
          date.innerText = displayDate(Number.parseInt(dateValue));
        }
      }

      // attach event listeners to prev/next buttons
      function updatePageAndGo(pageDiff) {
        const page = document.getElementById("page");
        const pageValue = Number.parseInt(page.value);
        page.value = pageValue + pageDiff;
        document.getElementById("search-form").submit();
      }

      // if the sfw checkbox is checked, uncheck the nsfw checkbox and vice versa
      function ratingCheckboxes(clicked) {
          sfw = document.getElementById("sfw")
          nsfw = document.getElementById("nsfw")

          if (clicked === 'nsfw' && sfw.checked) {
              sfw.checked = false
          } else if (clicked === 'sfw' && nsfw.checked) {
              nsfw.checked = false
          }
      }

      function blurImages() {
        const blurButton = document.getElementById("blur")
        const enable = blurButton.checked
        const images = document.querySelectorAll(".cover-image.nsfw")
        for (const image of images) {
          if (enable) {
            localStorage.setItem("blurNSFW", "true")
            image.classList.add("blur")
          } else {
            localStorage.setItem("blurNSFW", "false")
            image.classList.remove("blur")
          }
        }
      }

      const blurSetting = localStorage.getItem("blurNSFW")
      if (blurSetting === "true") {
        console.log("reading blur setting true from local storage")
        document.getElementById("blur").checked = true
      } else if (blurSetting === "false") {
        console.log("reading blur setting false from local storage")
        document.getElementById("blur").checked = false
      }

      parseParamsFromURL(null);
      updateMediaTypes()
      // need to parse the media type again, since the media type options are updated
      parseParamsFromURL("media_type");
      blurImages()
      convertDates()
      document.getElementById("blur").addEventListener("change", blurImages);
      document.getElementById("entry_type").addEventListener("change", updateMediaTypes);
      document.getElementById("sfw").addEventListener("change", () => ratingCheckboxes('sfw'));
      document.getElementById("nsfw").addEventListener("change", () => ratingCheckboxes('nsfw'));
      document.querySelectorAll(".prev-page").forEach((el) => {
        el.addEventListener("click", () => updatePageAndGo(-1));
      });

      document.querySelectorAll(".next-page").forEach((el) => {
        el.addEventListener("click", () => updatePageAndGo(1));
      });
  })
</script>
